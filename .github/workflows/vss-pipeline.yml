name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-24.04, macos-14, windows-2022 ]
        python-version: [ "3.10", "3.11", "3.12" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
#        with:
#          python-version: '3.12'

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          pytest --cov=src src/tests/


  build_and_push:
    runs-on: ubuntu-latest
    needs: test

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get short commit SHA
        id: git_info
        run: echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build -t chukwuebukacihuoma/vector-similarity-search:${{ env.IMAGE_TAG }} .

      - name: Push Docker image with latest tag
        run: |
          docker tag chukwuebukacihuoma/vector-similarity-search:${{ env.IMAGE_TAG }} chukwuebukacihuoma/vector-similarity-search:latest
          docker push chukwuebukacihuoma/vector-similarity-search:latest



#
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build_and_push
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up Kubernetes
#        uses: azure/setup-kubectl@v1
#        with:
#          version: 'v1.21.0'
#
#      - name: Deploy to Kubernetes
#        run: |
#          kubectl apply -f k8s/deployment.yml
#          kubectl rollout status deployment/your-app-deployment


#  deploy:
#    runs-on: ubuntu-latest
#    needs: build_and_push
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up kubectl
#        uses: azure/setup-kubectl@v1
#        with:
#          version: 'v1.18.0'
#
#      - name: Deploy to Kubernetes
#        env:
#          KUBECONFIG: ${{ secrets.KUBECONFIG }}  # store Kubeconfig in GitHub secrets
#        run: |
#          kubectl apply -f k8s/deployment.yml
#          kubectl apply -f k8s/service.yml
#          kubectl rollout status deployment/similarity-search-deployment
