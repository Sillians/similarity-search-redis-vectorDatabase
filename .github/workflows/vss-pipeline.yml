name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Python
      - name: Set up Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run tests
      - name: Run unit tests
        run: |
          pytest --cov=src tests/

  build_and_push:
    runs-on: ubuntu-latest
    needs: test  # Only runs after tests pass

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Log in to Docker Hub or GitHub Container Registry
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t your-dockerhub-username/your-image-name:latest .

      # Push Docker image to Docker Hub
      - name: Push Docker image
        run: |
          docker push your-dockerhub-username/your-image-name:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.21.0'

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yml
          kubectl rollout status deployment/your-app-deployment
