name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Python
      - name: Set up Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

       # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run tests
      - name: Run unit tests
        run: |
          pytest --cov=src src/tests/


  build_and_push:
    runs-on: ubuntu-latest
    needs: test  # Only runs after tests pass

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Get the short commit SHA
      - name: Get short commit SHA
        id: git_info
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      # Log in to Docker Hub using the environment variables
      - name: Log in to Docker Hub
        run: echo "${{ env.DOCKER_PASSWORD }}" | docker login -u "${{ env.DOCKER_USERNAME }}" --password-stdin

      # Build Docker image with dynamic tag based on the Git commit SHA
      - name: Build Docker image
        run: |
          docker build -t chukwuebukacihuoma/vector-similarity-search:${{ steps.git_info.outputs.sha_short }} .

      # Push Docker image with "latest" tag
      - name: Push Docker image with latest tag
        run: |
          docker tag chukwuebukacihuoma/vector-similarity-search:${{ steps.git_info.outputs.sha_short }} chukwuebukacihuoma/vector-similarity-search:latest
          docker push chukwuebukacihuoma/vector-similarity-search:latest



#
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build_and_push
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up Kubernetes
#        uses: azure/setup-kubectl@v1
#        with:
#          version: 'v1.21.0'
#
#      - name: Deploy to Kubernetes
#        run: |
#          kubectl apply -f k8s/deployment.yml
#          kubectl rollout status deployment/your-app-deployment


#deploy:
#  runs-on: ubuntu-latest
#  needs: build_and_push
#
#  steps:
#    - name: Checkout code
#      uses: actions/checkout@v2
#
#    - name: Set up kubectl
#      uses: azure/setup-kubectl@v1
#      with:
#        version: 'v1.18.0'
#
#    - name: Deploy to Kubernetes
#      env:
#        KUBECONFIG: ${{ secrets.KUBECONFIG }}  # store Kubeconfig in GitHub secrets
#      run: |
#        kubectl apply -f k8s/deployment.yml
#        kubectl apply -f k8s/service.yml
#        kubectl rollout status deployment/similarity-search-deployment
